public class CandidateKey {

	// This method acts as a uniqueness checker for the Candidate object based on the Email__c field
	public static void hasCandidateDuplicates(Candidate__c[] candidates){
	
        	//TODO: Define a map for unique Candidates called "candidateMap" that maps a String to the Candidate

		//TODO: Declare a for loop to cycle through the candidates.


            		// TODO: Within that loop, check to verify that the email is not null and if it has a value, store the lastName+email in a String called unique key
			// and then check to see if there are duplicate unique keys within this batch of records.  If there are, use addError to prevent them,
			// and if not, add the unique keys/candidate combo to the candidateMap.


		
  		//Now hit the DB looking for dupes
  		if (!candidateMap.isEmpty()){
	  		for(Candidate__c[] candidatesCheck:[select unique_key__c from Candidate__c where unique_key__c IN :candidateMap.keySet()]) {
				
				// TODO: Create a for loop that cycles through the triggering candidates	and checks if the record is a dupe.
				// If it is, add an error that describes the issue for the user.			


	    		}
  		} 
  	} 
}